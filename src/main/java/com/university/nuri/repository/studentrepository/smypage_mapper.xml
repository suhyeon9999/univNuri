<?xml version="1.0" encoding="UTF-8"?>
  <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smypage">
	<select id="getMyPageInfo" parameterType="Integer"
		resultType="map">
		SELECT
		u.user_id AS user_id,
		u.status AS status,
		d.dept_name
		AS dept_name,
		u.name AS name,
		u.phone AS phone,
		u.email AS email,
		u.birth
		AS birth,
		u.user_pw AS user_pw,
		s.s_address AS s_address,
		s.s_address2 AS
		s_address2,
		f.f_name AS f_name,
		f.f_old_name AS f_old_name
		FROM student s
		JOIN user u ON s.user_idx = u.user_idx
		JOIN department d ON s.dept_idx
		= d.dept_idx
		LEFT JOIN file f ON u.f_idx = f.f_idx
		WHERE s.s_idx =
		#{s_idx};
	</select>

	<select id="checkSpassword" parameterType="Integer"
		resultType="String">
		SELECT u.user_pw
		FROM student s
		JOIN user u ON s.user_idx =
		u.user_idx
		WHERE s.s_idx = #{s_idx}
	</select>

	<update id="updateSpassword" parameterType="Map">
		UPDATE user u
		JOIN
		student s ON u.user_idx = s.user_idx
		SET u.user_pw = #{newPassword}
		WHERE s.s_idx = #{s_idx}
	</update>

	<update id="getMyPageInfoUpdateOK" parameterType="Map">
		UPDATE user u
		JOIN student s ON u.user_idx = s.user_idx
		SET
		u.phone =
		#{phone},        <!-- user 테이블의 phone -->
		u.email = #{email},        <!-- user 테이블의 email -->
		s.s_address = #{address1},  <!-- student 테이블의 address1 -->
		s.s_address2 = #{address2},  <!-- student 테이블의 address2 -->
		u.birth = #{birth}      
		WHERE s.s_idx = #{s_idx}     <!-- student 테이블의 s_idx 값으로 조건 -->
	</update>


	<!-- 파일 관리 -->
	<insert id="insertFileFirst" parameterType="map"
		useGeneratedKeys="true" keyProperty="f_idx">
		INSERT INTO file (f_name, f_size, f_date, f_type)
		VALUES (#{f_name}, #{f_size}, NOW(), #{f_type})
	</insert>

	<update id="updateUserFileIdx" parameterType="map">
		UPDATE user
		SET f_idx = #{f_idx}
		WHERE user_idx = #{user_idx}
	</update>

	<update id="updateFname" parameterType="map">
		UPDATE file
		SET f_name = #{f_name}, f_size = #{f_size}, f_type = #{f_type}
		WHERE f_idx = #{f_idx}
	</update>

	<update id="insertFoldName" parameterType="map">
		UPDATE file
		SET f_old_name = #{f_old_name}
		WHERE f_idx = #{f_idx}
	</update>

	<update id="updateFnameFoldName" parameterType="map">
		UPDATE file
		SET f_name = #{f_name}, f_size = #{f_size}, f_type = #{f_type},
		f_old_name = #{f_old_name}
		WHERE f_idx = #{f_idx}
	</update>

</mapper>